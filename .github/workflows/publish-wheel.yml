name: Publish
on:
  workflow_dispatch:

jobs:
  build:
    name: Build wheels for ${{ matrix.os }} - Python ${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        include:
        # 3.10
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            python-version: '3.10'
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            python-version: '3.10'
          - os: macos-latest
            target: x86_64-apple-darwin
            python-version: '3.10'
          - os: macos-latest
            target: aarch64-apple-darwin
            python-version: '3.10'
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            python-version: '3.10'
        # 3.11- 
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            python-version: '3.11'
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            python-version: '3.11'
          - os: macos-latest
            target: x86_64-apple-darwin
            python-version: '3.11'
          - os: macos-latest
            target: aarch64-apple-darwin
            python-version: '3.11'
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            python-version: '3.11'

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Add macOS Rust targets
        if: matrix.os == 'macos-latest'
        run: |
          rustup target add x86_64-apple-darwin aarch64-apple-darwin
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter python${{ matrix.python-version }} ${{ matrix.os == 'macos-latest' && '--target universal2-apple-darwin' || '' }}
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  publish:
    name: Publish to PyPI
    needs: [build, build-sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist/
          skip_existing: true