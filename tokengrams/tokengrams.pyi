from pathlib import Path


class BigramCounter:
    """A counter of bigrams."""
    @staticmethod
    def from_file(filepath: str) -> 'BigramCounter': ...
    def count(self, gram: list[int]) -> int: ...
    def num_grams(self) -> int: ...


class TrigramCounter:
    """A counter of trigrams."""
    @staticmethod
    def from_file(filepath: str) -> 'TrigramCounter': ...
    def count(self, gram: list[int]) -> int: ...
    def num_grams(self) -> int: ...


class FourgramCounter:
    """A counter of fourgrams."""
    @staticmethod
    def from_file(filepath: str) -> 'FourgramCounter': ...
    def count(self, gram: list[int]) -> int: ...
    def num_grams(self) -> int: ...


class FivegramCounter:
    """A counter of fivegrams."""
    @staticmethod
    def from_file(filepath: str) -> 'FivegramCounter': ...
    def count(self, gram: list[int]) -> int: ...
    def num_grams(self) -> int: ...


class SixgramCounter:
    """A counter of sixgrams."""
    @staticmethod
    def from_file(filepath: str) -> 'SixgramCounter': ...
    def count(self, gram: list[int]) -> int: ...
    def num_grams(self) -> int: ...


class TokenTrie:
    """A trie of token n-grams."""
    def find(self, gram: list[int]) -> int | None: ...
    def num_orders(self) -> int: ...
    def num_grams(self) -> int: ...
    def to_bytes(self) -> bytes: ...


class WordTrie:
    """A trie of word n-grams."""
    @staticmethod
    def from_files(filepaths: list[str | Path], fmt: str) -> 'WordTrie': ...
    @staticmethod
    def from_bytes(bytes: list[int]) -> 'WordTrie': ...
    @staticmethod
    def from_texts(texts: list[str]) -> 'WordTrie': ...
    def find(self, gram: str) -> int | None: ...
    def num_orders(self) -> int: ...
    def num_grams(self) -> int: ...
    def to_bytes(self) -> bytes: ...